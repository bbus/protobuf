// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/unittest_import_public_proto3.proto
namespace ProtobufUnittestImport

open Google.Protobuf
open Google.Protobuf.Reflection
open Google.Protobuf.Collections

type UnittestImportPublicProto3Reflection() =
  static let descriptor =
    let descriptorData =
      System.Convert.FromBase64String(
          System.String.Concat(
              "CjNnb29nbGUvcHJvdG9idWYvdW5pdHRlc3RfaW1wb3J0X3B1YmxpY19wcm90",
              "bzMucHJvdG8SGHByb3RvYnVmX3VuaXR0ZXN0X2ltcG9ydCIgChNQdWJsaWNJ",
              "bXBvcnRNZXNzYWdlEgkKAWUYASABKAVCNwoYY29tLmdvb2dsZS5wcm90b2J1",
              "Zi50ZXN0qgIaR29vZ2xlLlByb3RvYnVmLlRlc3RQcm90b3NiBnByb3RvMw=="))
    FileDescriptor.FromGeneratedCode(descriptorData,
        [| |],
        new GeneratedClrTypeInfo(
          null,
          [|
            new GeneratedClrTypeInfo(typeof<PublicImportMessage>, PublicImportMessage.Parser, [| "E" |], null, null, null)
          |]))

  static member val Descriptor = descriptor

and [<AllowNullLiteral>] public PublicImportMessage =
  val mutable private e_ : int

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  new () =
    {
      e_ = Unchecked.defaultof<int>
    }

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  new (other: PublicImportMessage) =
    {
      e_ = other.e_
    }

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  static member Parser = new MessageParser<PublicImportMessage>(fun () -> new PublicImportMessage())

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  static member Descriptor = UnittestImportPublicProto3Reflection.Descriptor.MessageTypes.[0]

  /// <summary>Field number for the "e" field.</summary>
  static member public EFieldNumber = 1
  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  member public this.E
    with get() = this.e_
    and set(value: int) =
      this.e_ <- value


  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  override this.Equals(other: System.Object) : bool =
    match other with
      | :? PublicImportMessage as x -> (x :> System.IEquatable<PublicImportMessage>).Equals(this)
      | _ -> false

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  override this.GetHashCode() : int =
    let mutable hash = 1
    if this.E <> 0 then hash <- hash ^^^ this.E.GetHashCode()
    hash

  [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
  override this.ToString() =
    JsonFormatter.ToDiagnosticString(this)

  interface IMessage<PublicImportMessage> with
    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.WriteTo(output: CodedOutputStream) : unit =
      if this.E <> 0 then
        output.WriteRawTag(8uy)
        output.WriteInt32(this.E)


    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.CalculateSize() : int =
      let mutable size = 0
      if this.E <> 0 then
        size <- size + 1 + CodedOutputStream.ComputeInt32Size(this.E)
      size

    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.MergeFrom(other: PublicImportMessage) : unit =
      if not (System.Object.ReferenceEquals(other, null)) then
        if other.E <> 0 then
          this.E <- other.E

    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.MergeFrom(input: CodedInputStream) : unit =
      let mutable tag = input.ReadTag()
      while (tag <> 0u) do
        match tag with
          | 8u ->
            this.E <- input.ReadInt32()
          | _ ->
            input.SkipLastField()
        tag <- input.ReadTag()

    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.Clone() : PublicImportMessage =
      new PublicImportMessage(this)

    [<System.Diagnostics.DebuggerNonUserCodeAttribute>]
    member this.Equals(other: PublicImportMessage) : bool =
      if System.Object.ReferenceEquals(other, null) then
        false
      else if System.Object.ReferenceEquals(other, this) then
        true
      else if this.E <> other.E then false
      else true

    member this.Descriptor : Reflection.MessageDescriptor = PublicImportMessage.Descriptor


